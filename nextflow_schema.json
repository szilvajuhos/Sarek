{
    "$schema": "https://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/sarek/master/nextflow_schema.json",
    "title": "nf-core/sarek pipeline parameters",
    "description": "An open-source analysis pipeline to detect germline or somatic variants from whole genome or targeted sequencing",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "step"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Path to input file.",
                    "help_text": "Use this to specify the location of your input TSV file. Input TSV file on `mapping`, `prepare_recalibration`, `recalibrate`, `variant_calling` and `Control-FREEC` steps\nMultiple TSV files can be specified with quotes\nWorks also with the path to a directory on `mapping` step with a single germline sample only\nAlternatively, path to VCF input file on `annotate` step\nMultiple VCF files can be specified with quotes."
                },
                "step": {
                    "type": "string",
                    "default": "mapping",
                    "fa_icon": "fas fa-play",
                    "description": "Starting step.",
                    "help_text": "(only one)",
                    "enum": [
                        "mapping",
                        "prepare_recalibration",
                        "recalibrate",
                        "variant_calling",
                        "annotate",
                        "Control-FREEC"
                    ]
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": ".&#x2F;results",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            }
        },
        "main_options": {
            "title": "Main options",
            "type": "object",
            "description": "Option used for most of the pipeline",
            "default": "",
            "properties": {
                "tools": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-toolbox",
                    "description": "Specify tools to use for variant calling and/or for annotation.",
                    "help_text": "Multiple separated with commas\n\n`DNAseq`, `DNAscope` and `TNscope` are only available with `--sentieon`",
                    "enum": [
                        "null",
                        "ASCAT",
                        "CNVkit",
                        "ControlFREEC",
                        "FreeBayes",
                        "HaplotypeCaller",
                        "Manta",
                        "mpileup",
                        "MSIsensor",
                        "Mutect2",
                        "Strelka",
                        "TIDDIT",
                        "snpEff",
                        "VEP",
                        "merge",
                        "DNAseq",
                        "DNAscope",
                        "TNscope"
                    ]
                },
                "no_intervals": {
                    "type": "boolean",
                    "fa_icon": "fas fa-ban",
                    "description": "Disable usage of intervals.",
                    "help_text": "Intervals are part of the genome chopped up, used to speed up preprocessing and variant calling"
                },
                "nucleotides_per_second": {
                    "type": "number",
                    "fa_icon": "fas fa-clock",
                    "description": "Estimate interval size.",
                    "help_text": "Intervals are part of the genome chopped up, used to speed up preprocessing and variant calling",
                    "default": 1000
                },
                "sentieon": {
                    "type": "boolean",
                    "fa_icon": "fas fa-tools",
                    "description": "Enable Sentieon if available.",
                    "help_text": "Adds the following options for --tools: DNAseq, DNAscope and TNscope"
                },
                "skip_qc": {
                    "type": "string",
                    "fa_icon": "fas fa-forward",
                    "description": "Specify which QC tools to skip.",
                    "help_text": "Multiple separated with commas\n\n`--skip_qc BaseRecalibrator` does not skip the process, but is actually just not saving the reports",
                    "enum": [
                        "null",
                        "all",
                        "bamQC",
                        "BaseRecalibrator",
                        "BCFtools",
                        "Documentation",
                        "FastQC",
                        "MultiQC",
                        "samtools",
                        "vcftools",
                        "versions"
                    ],
                    "default": "null"
                },
                "target_bed": {
                    "type": "string",
                    "fa_icon": "fas fa-crosshairs",
                    "description": "Target BED file for whole exome or targeted sequencing."
                }
            },
            "fa_icon": "fas fa-user-cog"
        },
        "trim_split_fastq": {
            "title": "Trim/split FASTQ",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-cut",
            "properties": {
                "trim_fastq": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cut",
                    "description": "Run Trim Galore",
                    "hidden": true
                },
                "clip_r1": {
                    "type": "integer",
                    "fa_icon": "fas fa-cut",
                    "description": "Remove bp from the 5' end of read 1",
                    "help_text": "With Trim Galore",
                    "hidden": true
                },
                "clip_r2": {
                    "type": "integer",
                    "description": "Remove bp from the 5' end of read 5",
                    "help_text": "With Trim Galore",
                    "fa_icon": "fas fa-cut",
                    "hidden": true
                },
                "three_prime_clip_r1": {
                    "type": "integer",
                    "fa_icon": "fas fa-cut",
                    "description": "Remove bp from the 3' end of read 1 AFTER adapter/quality trimming has been performed",
                    "help_text": "With Trim Galore",
                    "hidden": true
                },
                "three_prime_clip_r2": {
                    "type": "integer",
                    "fa_icon": "fas fa-cut",
                    "description": "Remove bp from the 3' end of read 2 AFTER adapter/quality trimming has been performed",
                    "help_text": "With Trim Galore",
                    "hidden": true
                },
                "trim_nextseq": {
                    "type": "integer",
                    "fa_icon": "fas fa-cut",
                    "description": "Apply the --nextseq=X option, to trim based on quality after removing poly-G tails",
                    "help_text": "With Trim Galore",
                    "hidden": true
                },
                "save_trimmed": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save trimmed FastQ file intermediates",
                    "help_text": "If none specified, FastQs won't be split",
                    "hidden": true
                },
                "split_fastq": {
                    "type": "number",
                    "fa_icon": "fas fa-cut",
                    "description": "Specify how many reads should be contained in the split FastQ file",
                    "help_text": "If not used, FastQs won't be split",
                    "hidden": true
                }
            }
        },
        "preprocessing": {
            "title": "Preprocessing",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-toolbox",
            "properties": {
                "aligner": {
                    "type": "string",
                    "default": "bwa-mem",
                    "fa_icon": "fas fa-puzzle-piece",
                    "enum": [
                        "bwa-mem",
                        "bwa-mem2"
                    ],
                    "description": "Specify which aligner to be used to map reads to reference genome",
                    "help_text": "> **WARNING** Current indices for `bwa` in AWS iGenomes are not compatible with `bwa-mem2`.\n> Use `--bwa=false` to have `Sarek` build them automatically.",
                    "hidden": true
                },
                "markdup_java_options": {
                    "type": "string",
                    "default": "-Xms4000m -Xmx7g",
                    "fa_icon": "fas fa-memory",
                    "description": "Establish values for GATK MarkDuplicates memory consumption",
                    "help_text": "See https://github.com/SciLifeLab/Sarek/pull/689",
                    "hidden": true
                },
                "no_gatk_spark": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-ban",
                    "description": "Disable usage of GATK Spark implementation"
                },
                "save_bam_mapped": {
                    "type": "boolean",
                    "fa_icon": "fas fa-download",
                    "description": "Save Mapped BAMs"
                },
                "skip_markduplicates": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip GATK MarkDuplicates"
                }
            }
        },
        "variant_calling": {
            "title": "Variant Calling",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-toolbox",
            "properties": {
                "ascat_ploidy": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-wrench",
                    "description": "Overwrite ASCAT ploidy",
                    "help_text": "Requires that --ascat_purity is set"
                },
                "ascat_purity": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-wrench",
                    "description": "Overwrite ASCAT purity",
                    "help_text": "Requires that --ascat_ploidy is set"
                },
                "cf_coeff": {
                    "type": "number",
                    "default": 0.05,
                    "fa_icon": "fas fa-wrench",
                    "description": "Overwrite Control-FREEC coefficientOfVariation"
                },
                "cf_ploidy": {
                    "type": "string",
                    "default": "2",
                    "fa_icon": "fas fa-wrench",
                    "description": "Overwrite Control-FREEC ploidy"
                },
                "cf_window": {
                    "type": "number",
                    "fa_icon": "fas fa-wrench",
                    "description": "Overwrite Control-FREEC window size"
                },
                "no_gvcf": {
                    "type": "boolean",
                    "fa_icon": "fas fa-ban",
                    "description": "No g.vcf output from GATK HaplotypeCaller"
                },
                "no_strelka_bp": {
                    "type": "boolean",
                    "fa_icon": "fas fa-ban",
                    "description": "Will not use Manta candidateSmallIndels for Strelka",
                    "help_text": "Not recommended by Best Practices"
                },
                "pon": {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "description": "Panel-of-normals VCF (bgzipped) for GATK Mutect2 / Sentieon TNscope",
                    "help_text": "See https://gatk.broadinstitute.org/hc/en-us/articles/360042479112-CreateSomaticPanelOfNormals-BETA"
                },
                "pon_index": {
                    "type": "string",
                    "fa_icon": "fas fa-file",
                    "description": "Index of PON panel-of-normals VCF",
                    "help_text": "If none provided, will be generated automatically from the PON"
                },
                "ignore_soft_clipped_bases": {
                    "type": "boolean",
                    "fa_icon": "fas fa-ban",
                    "description": "Do not analyze soft clipped bases in the reads for GATK Mutect2"
                },
                "umi": {
                    "type": "boolean",
                    "fa_icon": "fas fa-tape",
                    "description": "If provided, UMIs steps will be run to extract and annotate the reads with UMI and create consensus reads"
                },
                "read_structure1": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-clipboard-list",
                    "description": "When processing UMIs, a read structure should always be provided for each of the fastq files.",
                    "help_text": "If the read does not contain any UMI, the structure will be +T (i.e. only template of any length).\nhttps://github.com/fulcrumgenomics/fgbio/wiki/Read-Structures"
                },
                "read_structure2": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-clipboard-list",
                    "description": "When processing UMIs, a read structure should always be provided for each of the fastq files.",
                    "help_text": "If the read does not contain any UMI, the structure will be +T (i.e. only template of any length).\nhttps://github.com/fulcrumgenomics/fgbio/wiki/Read-Structures"
                }
            }
        },
        "annotation": {
            "title": "Annotation",
            "type": "object",
            "description": "",
            "default": "",
            "fa_icon": "fas fa-toolbox",
            "properties": {
                "annotate_tools": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-hammer",
                    "description": "Specify from which tools Sarek should look for VCF files to annotate",
                    "help_text": "Only for step `annotate`",
                    "enum": [
                        "null",
                        "HaplotypeCaller",
                        "Manta",
                        "Mutect2",
                        "Strelka",
                        "TIDDIT"
                    ],
                    "hidden": true
                },
                "annotation_cache": {
                    "type": "boolean",
                    "fa_icon": "fas fa-database",
                    "description": "Enable the use of cache for annotation",
                    "help_text": "To be used with `--snpeff_cache` and/or `--vep_cache`",
                    "hidden": true
                },
                "cadd_cache": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-database",
                    "description": "Enable CADD cache",
                    "hidden": true
                },
                "cadd_indels": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-file",
                    "description": "Path to CADD InDels file",
                    "hidden": true
                },
                "cadd_indels_tbi": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-file",
                    "description": "Path to CADD InDels index",
                    "hidden": true
                },
                "cadd_wg_snvs": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-file",
                    "description": "Path to CADD SNVs file",
                    "hidden": true
                },
                "cadd_wg_snvs_tbi": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-file",
                    "description": "Path to CADD SNVs index",
                    "hidden": true
                },
                "genesplicer": {
                    "type": "boolean",
                    "fa_icon": "fas fa-gavel",
                    "description": "Enable genesplicer within VEP",
                    "hidden": true
                },
                "snpeff_cache": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-database",
                    "description": "Path to snpEff cache",
                    "help_text": "To be used with `--annotation_cache`",
                    "hidden": true
                },
                "vep_cache": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-database",
                    "description": "Path to VEP cache",
                    "help_text": "To be used with `--annotation_cache`",
                    "hidden": true
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for the reference genome indices used to align reads.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`.\n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "ac_loci": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "ac_loci_gc": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "bwa": {
                    "type": "string",
                    "fa_icon": "fas fa-copy"
                },
                "chr_dir": {
                    "type": "string",
                    "fa_icon": "fas fa-folder-open"
                },
                "chr_length": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "dbsnp": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "dbsnp_index": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "dict": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "fasta": {
                    "type": "string",
                    "fa_icon": "fas fa-font",
                    "description": "Path to FASTA genome file.",
                    "help_text": "If you have no genome reference available, the pipeline can build one using a FASTA file. This requires additional time and resources, so it's better to use a pre-build index if possible."
                },
                "fasta_fai": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "germline_resource": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "germline_resource_index": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "intervals": {
                    "type": "string",
                    "fa_icon": "fas fa-file-alt"
                },
                "known_indels": {
                    "type": "string",
                    "fa_icon": "fas fa-copy"
                },
                "known_indels_index": {
                    "type": "string",
                    "fa_icon": "fas fa-copy"
                },
                "mappability": {
                    "type": "string",
                    "fa_icon": "fas fa-file"
                },
                "snpeff_db": {
                    "type": "string",
                    "fa_icon": "fas fa-database"
                },
                "species": {
                    "type": "string",
                    "fa_icon": "fas fa-microscope"
                },
                "vep_cache_version": {
                    "type": "string",
                    "fa_icon": "fas fa-tag"
                },
                "save_reference": {
                    "type": "boolean",
                    "fa_icon": "fas fa-download",
                    "description": "Save built references"
                },
                "igenomes_base": {
                    "type": "string",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3:&#x2F;&#x2F;ngi-igenomes&#x2F;igenomes&#x2F;",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "genomes_base": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-map-marker-alt",
                    "description": "Directory / URL base for genomes references.",
                    "help_text": "All files are supposed to be in the same folder",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "mov"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "Workflow name.",
                    "fa_icon": "fas fa-fingerprint",
                    "hidden": true,
                    "help_text": "A custom name for the pipeline run. Unlike the core nextflow `-name` option with one hyphen this parameter can be reused multiple times, for example if using `-resume`. Passed through to steps such as MultiQC and used for things like report filenames and titles."
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true,
                    "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}&#x2F;pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "sequencing_center": {
                    "type": "string",
                    "default": "null",
                    "fa_icon": "fas fa-university",
                    "description": "Name of sequencing center to be displayed in BAM file"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "cpus": {
                    "type": "integer",
                    "default": 8,
                    "fa_icon": "fas fa-microchip"
                },
                "single_cpu_mem": {
                    "type": "string",
                    "default": "7 GB",
                    "fa_icon": "fas fa-sd-card"
                },
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;nf-core&#x2F;configs&#x2F;master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/main_options"
        },
        {
            "$ref": "#/definitions/trim_split_fastq"
        },
        {
            "$ref": "#/definitions/preprocessing"
        },
        {
            "$ref": "#/definitions/variant_calling"
        },
        {
            "$ref": "#/definitions/annotation"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ]
}
